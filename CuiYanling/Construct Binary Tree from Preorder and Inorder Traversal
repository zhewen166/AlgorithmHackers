/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    Map<Integer,Integer> inPos = new HashMap<Integer,Integer>();
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        for(int i=0;i<inorder.length;i++)
            inPos.put(inorder[i],i);
        return build(preorder,0,preorder.length-1,0,inorder.length-1);
    }
    private TreeNode build(int[] pre,int prestart,int preend,int instart,int inend){
        if(prestart>preend) return null;
        TreeNode root = new TreeNode(pre[prestart]);
        int mid = inPos.get(pre[prestart]);
        root.left = build(pre,prestart+1,prestart+mid-instart,instart,mid-1);
        root.right = build(pre,prestart+mid-instart+1,preend,mid+1,inend);
        return root;
    }
}
